// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services.AirlineInventoryManagement.DbContexts;

namespace Services.AirlineInventoryManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineBrand", b =>
                {
                    b.Property<int>("AirlineBrandID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName");

                    b.HasKey("AirlineBrandID");

                    b.ToTable("AirlineBrand");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineCompany", b =>
                {
                    b.Property<int>("AirlineCompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.HasKey("AirlineCompanyID");

                    b.ToTable("AirlineComapny");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineSchedule", b =>
                {
                    b.Property<int>("AirlineID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineBrand");

                    b.Property<int>("AirlineCompany");

                    b.Property<int>("AirlineInstrument");

                    b.Property<int>("FlightNumber");

                    b.Property<int?>("FromLocation");

                    b.Property<bool>("IsBlocked");

                    b.Property<bool>("IsDaily");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSpecificDays");

                    b.Property<bool>("IsWeekends");

                    b.Property<bool>("IsWeekly");

                    b.Property<int?>("ToLocation");

                    b.Property<DateTime>("endTime");

                    b.Property<string>("mealType");

                    b.Property<DateTime>("startTime");

                    b.HasKey("AirlineID");

                    b.HasIndex("AirlineBrand");

                    b.HasIndex("AirlineCompany");

                    b.HasIndex("AirlineInstrument");

                    b.HasIndex("FromLocation");

                    b.HasIndex("ToLocation");

                    b.ToTable("AirlineSchedule");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineScheduleDayRelation", b =>
                {
                    b.Property<int>("RefID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineID");

                    b.Property<int>("AirlineScheduleID");

                    b.Property<string>("weekDay");

                    b.HasKey("RefID");

                    b.HasIndex("AirlineID");

                    b.ToTable("AirlineScheduleDayRelation");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineSeatCostRelation", b =>
                {
                    b.Property<int>("RefID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightID");

                    b.Property<int>("NoOfSeats");

                    b.Property<int>("SeatTypeID");

                    b.Property<double>("Tax");

                    b.Property<double>("TicketCost");

                    b.HasKey("RefID");

                    b.HasIndex("FlightID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("AirlineSeatCostRelation");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.Airport", b =>
                {
                    b.Property<int>("AirportID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirportCode");

                    b.Property<string>("AirportName");

                    b.Property<string>("Location");

                    b.HasKey("AirportID");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.ArlineInstrument", b =>
                {
                    b.Property<int>("AirlineInstrumentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InstrumentName");

                    b.HasKey("AirlineInstrumentID");

                    b.ToTable("AirlineInstrument");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.SeatTypes", b =>
                {
                    b.Property<int>("SeatTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SeatType");

                    b.HasKey("SeatTypeID");

                    b.ToTable("SeatType");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineSchedule", b =>
                {
                    b.HasOne("Services.AirlineInventoryManagement.Models.AirlineBrand", "AirlineBrandRef")
                        .WithMany()
                        .HasForeignKey("AirlineBrand")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Services.AirlineInventoryManagement.Models.AirlineCompany", "AirlineCompanyRef")
                        .WithMany()
                        .HasForeignKey("AirlineCompany")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Services.AirlineInventoryManagement.Models.ArlineInstrument", "AirlineInstrumentRef")
                        .WithMany()
                        .HasForeignKey("AirlineInstrument")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Services.AirlineInventoryManagement.Models.Airport", "AirportFrom")
                        .WithMany()
                        .HasForeignKey("FromLocation");

                    b.HasOne("Services.AirlineInventoryManagement.Models.Airport", "AirportTo")
                        .WithMany()
                        .HasForeignKey("ToLocation");
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineScheduleDayRelation", b =>
                {
                    b.HasOne("Services.AirlineInventoryManagement.Models.AirlineSchedule", "AirlineSchedule")
                        .WithMany("lstAirlineScheduleDay")
                        .HasForeignKey("AirlineID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Services.AirlineInventoryManagement.Models.AirlineSeatCostRelation", b =>
                {
                    b.HasOne("Services.AirlineInventoryManagement.Models.AirlineSchedule", "AirlineScheduleRef")
                        .WithMany("lstAirlineSeatCost")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Services.AirlineInventoryManagement.Models.SeatTypes", "SeatType")
                        .WithMany()
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
